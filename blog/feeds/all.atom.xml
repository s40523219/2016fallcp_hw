<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>2016Fall 計算機程式課程網誌 (虎尾科大MDE)</title><link href="./" rel="alternate"></link><link href="./feeds/all.atom.xml" rel="self"></link><id>./</id><updated>2017-01-09T12:00:00+08:00</updated><entry><title>2016fallcp 期末考週</title><link href="./2016fallcp-qi-mo-kao-zhou.html" rel="alternate"></link><published>2017-01-09T12:00:00+08:00</published><updated>2017-01-09T12:00:00+08:00</updated><author><name>s40523219</name></author><id>tag:,2017-01-09:./2016fallcp-qi-mo-kao-zhou.html</id><summary type="html">&lt;p&gt;W18&lt;/p&gt;</summary><category term="Brython"></category></entry><entry><title>W16</title><link href="./w16.html" rel="alternate"></link><published>2016-12-26T12:00:00+08:00</published><updated>2016-12-26T12:00:00+08:00</updated><author><name>s40523219</name></author><id>tag:,2016-12-26:./w16.html</id><summary type="html">&lt;p&gt;W16 &lt;/p&gt;


&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫圖 --&gt;

&lt;div id="ex1"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
form browser import alert
form browser import document
form browser import html
import random
#print("test")
#alert("test")
con1 = document["con"]
#1. 利用亂數模組產生標準答案
標準答案 = random.randint(1,100)
#2. 取得使用者所猜的整數 (可以使用 try except )
#con1 &lt;= str(標準答案)

'''
try:
    for i in range(1):
        #con1 &lt;= "test" + "&lt;br/&gt;"
        yourInpot = int(input("請輸入一個整數！"))
        #con1 &lt;= "test" + html.BR()
        output = yourInput + 1
        con1 &lt;= "你輸入的整數加上 1 之後 , 為" + str(output)
except:
    con1 &lt;= "請輸入整數！"
'''

def b1(e):
    alert("click")
document["b1"].bind("click",b1)
&lt;/script&gt;

&lt;p&gt;&lt;button id = "b1"&gt;玩猜數字遊戲&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;猜數字遊戲:&lt;/p&gt;
&lt;div id="id3"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document
from browser import html
import random

id3 = document["id3"]
def guess(ev):
    # 清除 id3 中的內容
    id3.clear()
    id3 &lt;= "開始玩猜數字遊戲" + html.BR()
    標準答案 = random.randint(1, 100)
    你猜的數字 = int(input("請輸入您所猜 1~100 間的整數:"))
    猜測次數 = 1
    while 標準答案 != 你猜的數字:
        if 標準答案 &lt; 你猜的數字:
            #print("太大了，再猜一次 :)加油")
            # 清除 id3 中的內容
            id3.clear()
            id3 &lt;= "猜第" + str(猜測次數) + "次, 太大了，再猜一次 :)加油" + html.BR()
        else:
            #print("太小了，再猜一次 :)加油")
            # 清除 id3 中的內容
            id3.clear()
            id3 &lt;= "猜第" + str(猜測次數) + "次, 太小了，再猜一次 :)加油" + html.BR()
        你猜的數字 = int(input("請輸入您所猜 1~100 間的整數:"))
        猜測次數 += 1

    #print("猜對了！總共猜了", 猜測次數, "次")
    id3 &lt;= "猜對了！答案為" + str(標準答案) + ", 總共猜了" + str(猜測次數) + "次"

document["but3"].bind("click", guess)
&lt;/script&gt;

&lt;p&gt;&lt;button id="but3"&gt;玩猜數字遊戲&lt;/button&gt;&lt;/p&gt;</summary><category term="Brython"></category></entry><entry><title>W15</title><link href="./w15.html" rel="alternate"></link><published>2016-12-19T12:00:00+08:00</published><updated>2016-12-19T12:00:00+08:00</updated><author><name>s40523219</name></author><id>tag:,2016-12-19:./w15.html</id><summary type="html">&lt;p&gt;W15&lt;/p&gt;
&lt;h3&gt;cpa_w14-1 教學影片重點 : &lt;/h3&gt;

&lt;p&gt;&lt;br&gt;
&lt;h4&gt;&lt;strong&gt;Q: leo 檔案 &amp;amp; setting 節點用法?&lt;/strong&gt;&lt;/h4&gt;
&lt;h4&gt;A: 結合複製指令，選擇一個或多個物件同步進行相同指令。&lt;/h4&gt;
&lt;br&gt;
&lt;h4&gt;&lt;strong&gt;Q: 如何複製或搬運 leo 節點? 有哪些快捷鍵? &lt;/strong&gt;&lt;/h4&gt;
&lt;li&gt;Ctrl + i = 新增節點
&lt;li&gt;Ctrl + u = 節點上移
&lt;li&gt;Ctrl + d = 節點下移
&lt;li&gt;Ctrl + l = 節點左移
&lt;li&gt;Ctrl + r = 節點右移
&lt;br&gt;
&lt;h4&gt;&lt;strong&gt;Q: @path 節點指令用法&lt;/strong&gt;&lt;/h4&gt;
&lt;h4&gt;A: 可在節點指令後註記標題，表示節點的路徑關係。&lt;/h4&gt;
&lt;br&gt;
&lt;h4&gt;&lt;strong&gt;Q: @edit &amp;amp; @auto節點指令用法&lt;/strong&gt;&lt;/h4&gt;
&lt;h4&gt;A: 兩者皆為導入外部檔案"標題指令"，建立起Leo內部與外部檔案的關係。&lt;/h4&gt;
&lt;h4&gt;不同的地方在於 @edit 讀取內容不會自動分割節點，而 @auto 會自動分割節點。&lt;/h4&gt;
&lt;br&gt;
&lt;h4&gt;&lt;strong&gt;Q: @others 節點指令用法&lt;/strong&gt;&lt;/h4&gt;
&lt;h4&gt;A: 此節點下屬所有子節點的內容，當 @other 改變位置時，所對應的子節點也相應移位。&lt;/h4&gt;
&lt;br&gt;
&lt;h4&gt;&lt;strong&gt;＊可利用節點將雜亂的程式碼分割成數個子節點，針對各別修改需求尋找子節點。&lt;/strong&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;strong&gt;＊節點標題與程式碼內容互不影響。&lt;/strong&gt;&lt;/h4&gt;&lt;/p&gt;</summary><category term="Brython"></category></entry><entry><title>W14 Brython 開始練習</title><link href="./w14-brython-kai-shi-lian-xi.html" rel="alternate"></link><published>2016-12-12T12:00:00+08:00</published><updated>2016-12-12T12:00:00+08:00</updated><author><name>s40523219</name></author><id>tag:,2016-12-12:./w14-brython-kai-shi-lian-xi.html</id><summary type="html">&lt;p&gt;Brython 開始練習&lt;/p&gt;


&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫圖 --&gt;

&lt;div id="ex1"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
container = doc ['ex1']

total = 0.0
myHeight=float(input("Enter your height(cm): "))
total = total + (myHeight / 100) ** 2
myWeight=float(input("Enter your weight(kg): "))
total = myWeight / total
myBMI = total
#BMI值取至小數點第一位
myBMI = round(myBMI,1)

container &lt;= 'myBMI'
&lt;/script&gt;

&lt;pre class="brush: python"&gt;
&lt;!-- 以下實際利用  Brython 畫圖 --&gt;
&lt;div id="ex1"&gt;&lt;/div&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
container = doc ['ex1']

total = 0.0
myHeight=float(input("Enter your height(cm): "))
total = total + (myHeight / 100) ** 2
myWeight=float(input("Enter your weight(kg): "))
total = myWeight / total
myBMI = total
#BMI值取至小數點第一位
myBMI = round(myBMI,1)

container &lt;= 'myBMI'
&lt;/script&gt;
&lt;/pre&gt;

&lt;!-- 以下實際利用  Brython 畫圖 --&gt;

&lt;div id="ex2"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
container = doc ['ex2']
mystring = input("要印出甚麼字串?")
mynum = input("要印出幾次?")
for i in range(int(mynum)):
    container &lt;= mystring + html.BR()
&lt;/script&gt;

&lt;pre class="brush: python"&gt;
&lt;!-- 以下實際利用  Brython 畫圖 --&gt;
&lt;div id="ex2"&gt;&lt;/div&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
container = doc ['ex2']
mystring = input("要印出甚麼字串?")
mynum = input("要印出幾次?")
for i in range(int(mynum)):
    container &lt;= mystring + html.BR()
&lt;/script&gt;
&lt;/pre&gt;</summary><category term="Brython"></category></entry><entry><title>W13 Brython 繪圖練習</title><link href="./w13-brython-hui-tu-lian-xi.html" rel="alternate"></link><published>2016-12-05T12:00:00+08:00</published><updated>2016-12-05T12:00:00+08:00</updated><author><name>s40523219</name></author><id>tag:,2016-12-05:./w13-brython-hui-tu-lian-xi.html</id><summary type="html">&lt;p&gt;Brython 繪圖&lt;/p&gt;


&lt;p&gt;繪圖流程, 導入程式庫, 啟動, 然後引用各種模組開始繪圖&lt;/p&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫圖 --&gt;

&lt;canvas id="chord1" width="600" height="600"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
canvas = doc["chord1"]
ctx = canvas.getContext("2d")

def canvasText(x, y, fontSize, string, sup, sub, color, ctx):
    ctx.beginPath()
    ctx.fillStyle = color
    ctx.strokeStyle = color
    #ctx.font = "20px Arial"
    ctx.font = str(fontSize)+ "px Arial"
    ctx.fillText(string, x, y)
    ctx.font = str(fontSize-8)+ "px Arial"
    if sup != "":
        ctx.fillText(sup, x+fontSize/1.6, y-fontSize/2)
    if sub != "":
        ctx.fillText(sup, x+fontSize/1.6, y)
    ctx.fill()
    ctx.stroke()
    ctx.closePath()

# 設法利用運算印出吉他各把位的音名
def doreme(x, y, fontSize, order, ctx):
    # 讓音名數列可以每 12 音名後, 升高 key 後從頭開始
    if order &gt; 12:
        order = order % 12
    if order == 1:
        canvasText(x, y, fontSize, "A", "", "", "black", ctx)
    elif order ==2:
        canvasText(x, y, fontSize, "B", "b", "", "red", ctx)
    elif order == 3:
        canvasText(x, y, fontSize, "B", "", "", "black", ctx)
    elif order == 4:
        canvasText(x, y, fontSize, "C", "", "", "black", ctx)
    elif order == 5:
        canvasText(x, y, fontSize, "D", "b", "", "red", ctx)
    elif order == 6:
        canvasText(x, y, fontSize, "D", "", "", "black", ctx)
    elif order == 7:
        canvasText(x, y, fontSize, "E", "b", "", "red", ctx)
    elif order == 8:
        canvasText(x, y, fontSize, "E", "", "", "black", ctx)
    elif order == 9:
        canvasText(x, y, fontSize, "F", "", "", "black", ctx)
    elif order == 10:
        canvasText(x, y, fontSize, "G", "b", "", "red", ctx)
    elif order == 11:
        canvasText(x, y, fontSize, "G", "", "", "black", ctx)
    elif order == 12:
        canvasText(x, y, fontSize, "A", "b", "", "red", ctx)
    else:
        canvasText(x, y, fontSize, "A", "b", "", "red", ctx)

def background(x, y, xinc, yinc, xnum, ynum, ctx):
    # 水平線
    for i in range(ynum+1):
        ctx.beginPath()    
        if i == 0:
            ctx.lineWidth = 7
        else:
            ctx.lineWidth = 1
        ctx.moveTo(x-1, y+i*yinc)
        ctx.lineTo(x+xnum*xinc+1, y+i*yinc)        
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()

    # 垂直線
    for i in range(xnum+1):
        ctx.beginPath()    
        ctx.lineWidth = 1
        ctx.moveTo(x+i*xinc, y)
        ctx.lineTo(x+i*xinc, y+ynum*yinc)        
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()

    # 標定各弦音符號, 以及把位編號
    ctx.beginPath()
    ctx.fillStyle = 'black'
    ctx.strokeStyle = "black"
    ctx.font = "20px Arial"
    sixString = ["E", "A", "D", "G", "B", "E"]
    stringNum = 0
    for i in sixString:
        ctx.fillText(i, x-7+stringNum*xinc, y-15)
        stringNum = stringNum + 1
    num = 1
    for j in range(1,20,1):
        ctx.fillText(j,15,95+num*yinc)
        num = num + 1
    ctx.fill()
    ctx.stroke()
    ctx.closePath()

    firstBar = [8, 1, 6, 11, 3, 8]
    for j in range(19):
        fontSize = 15 
        for k in range(6):
            bx = x + (k)*w - fontSize/3
            by = y + (j)*h+h/2 + fontSize/2
            order = firstBar[k] + j + 1
            doreme(bx, by, fontSize, order, ctx)

w = 20
h = 25
background(50, 100, w, h, 5, 19, ctx)
&lt;/script&gt;

&lt;/pre&gt;</summary><category term="Brython"></category></entry><entry><title>W11 Brython 繪圖練習</title><link href="./w11-brython-hui-tu-lian-xi.html" rel="alternate"></link><published>2016-11-21T12:00:00+08:00</published><updated>2016-11-21T12:00:00+08:00</updated><author><name>s40523219</name></author><id>tag:,2016-11-21:./w11-brython-hui-tu-lian-xi.html</id><summary type="html">&lt;p&gt;Brython 繪圖&lt;/p&gt;


&lt;p&gt;繪圖流程, 導入程式庫, 啟動, 然後引用各種模組開始繪圖&lt;/p&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫圖 --&gt;

&lt;canvas id="chord1" width="600" height="450"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# 準備繪圖畫布
canvas = doc["chord1"]
ctx = canvas.getContext("2d")

def background(x, y, xinc, yinc, xnum, ynum, ctx):
    # 水平
    for i in range(ynum+1):
        ctx.beginPath()
        if i == 0:
            ctx.lineWidth = 7
        else:
            ctx.lineWidth = 1
        ctx.moveTo(x-1, y+i*yinc)
        ctx.lineTo(x+xnum*xinc+1, y+i*yinc)
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()
    # 垂直
    for i in range(xnum+1):
        ctx.beginPath()
        ctx.lineWidth = 1
        ctx.moveTo(x+i*xinc, y)
        ctx.lineTo(x+i*xinc, y+ynum*yinc)
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()

background(50, 100, 20, 25, 5, 4, ctx)
background(250, 100, 20, 25, 5, 4, ctx)
background(450, 100, 20, 25, 5, 4, ctx)
background(50, 300, 20, 25, 5, 4, ctx)
background(250, 300, 20, 25, 5, 4, ctx)
background(450, 300, 20, 25, 5, 4, ctx)

#tone 
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.font = "25px Arial"
a=50
b=250
c=450
d=100
e=300
ctx.fillText("A Major", a+10, d-25)
ctx.fillText("C Major", b+10, d-25)
ctx.fillText("G Major", c+10, d-25)
ctx.fillText("D Major", a+10, e-25)
ctx.fillText("E Major", b+10, e-25)
ctx.fillText("Cmaj7", c+15, e-25)
ctx.fill()
ctx.stroke()
ctx.closePath()

# o
def background(x, y, r, xnum, ctx):
    ctx.beginPath()
    ctx.arc(x+xnum*20, y-12, r, 0, 2*math.pi, False)
    ctx.lineWidth =3
    ctx.strokeStyle = "black"
    ctx.stroke()
    ctx.closePath()
background(50, 100, 5, 1, ctx)
background(50, 100, 5, 5, ctx)
background(250, 100, 5, 3, ctx)
background(250, 100, 5, 5, ctx)
background(450, 100, 5, 2, ctx)
background(450, 100, 5, 3, ctx)
background(50, 300, 5, 2, ctx)
background(250, 300, 5, 4, ctx)
background(250, 300, 5, 5, ctx)
background(450, 300, 5, 3, ctx)
background(450, 300, 5, 4, ctx)
background(450, 300, 5, 5, ctx)

# x
def background(x, y, inc, ctx):
    ctx.beginPath()
    y=y-12
    ctx.moveTo(x-inc,y-inc)
    ctx.lineTo(x+inc, y+inc)
    ctx.moveTo(x+inc, y-inc)
    ctx.lineTo(x-inc, y+inc)
    ctx.lineWidth =3
    ctx.strokeStyle = "black"
    ctx.stroke()
    ctx.closePath()
background(50, 100, 5, ctx)
background(250, 100, 5, ctx)
background(50, 300, 5, ctx)
background(70, 300, 5, ctx)
background(250, 300, 5, ctx)
background(450, 300, 5, ctx)

# number
def background(x, y, xnum, ynum, text, ctx):
    ctx.beginPath()
    ctx.fillStyle = 'black'
    ctx.strokeStyle = "black"
    y=y+13
    ctx.arc(x+xnum*20, y+ynum*25, 7, 0, 2*math.pi, False)
    ctx.fill()
    ctx.stroke()
    ctx.closePath()
    ctx.beginPath()
    ctx.fillStyle = 'white'
    ctx.font = "16px Arial"
    x=x-5
    y=y+5
    ctx.fillText(text, x+xnum*20, y+ynum*25)
    ctx.fill()
    ctx.stroke()
    ctx.closePath()
background(50, 100, 2, 1, 1, ctx)
background(50, 100, 3, 1, 2, ctx)
background(50, 100, 4, 1, 3, ctx)
background(250, 100, 4, 0, 1, ctx)
background(250, 100, 2, 1, 2, ctx)
background(250, 100, 1, 2, 3, ctx)
background(450, 100, 1, 1, 1, ctx)
background(450, 100, 0, 2, 2, ctx)
background(450, 100, 4, 2, 3, ctx)
background(450, 100, 5, 2, 4, ctx)
background(50, 300, 3, 1, 1, ctx)
background(50, 300, 4, 2, 2, ctx)
background(50, 300, 5, 1, 3, ctx)
background(250, 300, 3, 0, 1, ctx)
background(250, 300, 1, 1, 2, ctx)
background(250, 300, 2, 1, 3, ctx)
background(450, 300, 2, 1, 1, ctx)
background(450, 300, 1, 2, 2, ctx)
&lt;/script&gt;

&lt;p&gt;將繪圖內容納入 def 函式定義格式後:&lt;/p&gt;

&lt;pre class="brush: python"&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;
&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫圖 --&gt;
&lt;canvas id="chord1" width="600" height="450"&gt;&lt;/canvas&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# 準備繪圖畫布
canvas = doc["chord1"]
ctx = canvas.getContext("2d")

def background(x, y, xinc, yinc, xnum, ynum, ctx):
    # 水平
    for i in range(ynum+1):
        ctx.beginPath()
        if i == 0:
            ctx.lineWidth = 7
        else:
            ctx.lineWidth = 1
        ctx.moveTo(x-1, y+i*yinc)
        ctx.lineTo(x+xnum*xinc+1, y+i*yinc)
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()
    # 垂直
    for i in range(xnum+1):
        ctx.beginPath()
        ctx.lineWidth = 1
        ctx.moveTo(x+i*xinc, y)
        ctx.lineTo(x+i*xinc, y+ynum*yinc)
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()

#tone 
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.font = "25px Arial"
a=50
b=250
c=450
d=100
e=300
ctx.fillText("A Major", a+10, d-25)
ctx.fillText("C Major", b+10, d-25)
ctx.fillText("G Major", c+10, d-25)
ctx.fillText("D Major", a+10, e-25)
ctx.fillText("E Major", b+10, e-25)
ctx.fillText("Cmaj7", c+15, e-25)
ctx.fill()
ctx.stroke()
ctx.closePath()

# o
def background(x, y, r, xnum, ctx):
    ctx.beginPath()
    ctx.arc(x+xnum*20, y-12, r, 0, 2*math.pi, False)
    ctx.lineWidth =3
    ctx.strokeStyle = "black"
    ctx.stroke()
    ctx.closePath()

# x
def background(x, y, inc, ctx):
    ctx.beginPath()
    y=y-12
    ctx.moveTo(x-inc,y-inc)
    ctx.lineTo(x+inc, y+inc)
    ctx.moveTo(x+inc, y-inc)
    ctx.lineTo(x-inc, y+inc)
    ctx.lineWidth =3
    ctx.strokeStyle = "black"
    ctx.stroke()
    ctx.closePath()

# number
def background(x, y, xnum, ynum, text, ctx):
    ctx.beginPath()
    ctx.fillStyle = 'black'
    ctx.strokeStyle = "black"
    y=y+13
    ctx.arc(x+xnum*20, y+ynum*25, 7, 0, 2*math.pi, False)
    ctx.fill()
    ctx.stroke()
    ctx.closePath()
    ctx.beginPath()
    ctx.fillStyle = 'white'
    ctx.font = "16px Arial"
    x=x-5
    y=y+5
    ctx.fillText(text, x+xnum*20, y+ynum*25)
    ctx.fill()
    ctx.stroke()
    ctx.closePath()
&lt;/script&gt;
&lt;/pre&gt;</summary><category term="Brython"></category></entry><entry><title>W10 Brython 繪圖練習</title><link href="./w10-brython-hui-tu-lian-xi.html" rel="alternate"></link><published>2016-11-14T12:00:00+08:00</published><updated>2016-11-14T12:00:00+08:00</updated><author><name>s40523219</name></author><id>tag:,2016-11-14:./w10-brython-hui-tu-lian-xi.html</id><summary type="html">&lt;p&gt;Brython 繪圖&lt;/p&gt;


&lt;p&gt;繪圖流程,導入程式庫,啟動,然後引用各種模組開始繪圖&lt;/p&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫一條直線 --&gt;

&lt;canvas id="japanflag1" width="600" height="250"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# 準備繪圖畫布
canvas = doc["japanflag1"]
ctx = canvas.getContext("2d")

# 以下可以利用 ctx 物件進行畫圖
# 先畫一條直線
ctx.beginPath()
# 設定線的寬度為 1 個單位
ctx.lineWidth = 1
# 將畫筆移動到 (100, 100) 座標點
ctx.moveTo(100, 100)
# 然後畫直線到 (150, 200) 座標點
ctx.lineTo(150, 200)
# 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
# 實際執行畫線
ctx.moveTo(100, 200)
ctx.lineTo(150, 100)
ctx.strokeStyle = "blue"
ctx.stroke()
ctx.closePath()
&lt;/script&gt;

&lt;!-- 迴圈練習 --&gt;

&lt;canvas id="japanflag2" width="600" height="250"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
canvas = doc["japanflag2"]
ctx = canvas.getContext("2d")

 #垂直
for i in range(6):
    ctx.beginPath()
    ctx.lineWidth = 1
    ctx.moveTo(100+i*20,50)
    ctx.lineTo(100+i*20,150)
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()
#水平
for i in range(5):
    ctx.beginPath()
    if i == 0:
        ctx.lineWidth = 7
    else:
        ctx.lineWidth = 1
    ctx.moveTo(99,50+i*25)
    ctx.lineTo(201,50+i*25)
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()
&lt;/script&gt;

&lt;!-- A Major --&gt;

&lt;canvas id="japanflag3" width="600" height="250"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
canvas = doc["japanflag3"]
ctx = canvas.getContext("2d")

 #垂直
for i in range(6):
    ctx.beginPath()
    ctx.lineWidth = 1
    ctx.moveTo(100+i*20,50)
    ctx.lineTo(100+i*20,150)
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()
#水平
for i in range(5):
    ctx.beginPath()
    if i == 0:
        ctx.lineWidth = 7
    else:
        ctx.lineWidth = 1
    ctx.moveTo(99,50+i*25)
    ctx.lineTo(201,50+i*25)
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()

#A Major 
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.font = "25px Arial"
ctx.fillText("A Major", 110, 25)
ctx.fill()
ctx.stroke()
ctx.closePath()

# 1.2.3
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
for i in range(3):
    ctx.arc(140+i*20, 87.5, 7, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()
ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("1", 135, 92.5)
ctx.fillText("2", 155, 92.5)
ctx.fillText("3", 175, 92.5)
ctx.fill()
ctx.stroke()
ctx.closePath()

# o
ctx.beginPath()
ctx.arc(120, 40, 5, 0, 2*math.pi, False)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()
ctx.beginPath()
ctx.arc(200, 40, 5, 0, 2*math.pi, False)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()
# x
ctx.beginPath()
#ctx.arc(100, 40, 5, 0, 2*math.pi, False)
ctx.moveTo(95, 35)
ctx.lineTo(105, 45)
ctx.moveTo(105, 35)
ctx.lineTo(95, 45)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()
&lt;/script&gt;</summary><category term="評分"></category></entry><entry><title>2016Fall CP 學員連結</title><link href="./2016fall-cp-xue-yuan-lian-jie.html" rel="alternate"></link><published>2016-11-05T12:00:00+08:00</published><updated>2016-11-05T12:00:00+08:00</updated><author><name>yen</name></author><id>tag:,2016-11-05:./2016fall-cp-xue-yuan-lian-jie.html</id><summary type="html">&lt;p&gt;利用計算機程式兩班選課名單可以產生個別成員的倉儲、筆記、投影片與網誌.&lt;/p&gt;


&lt;p&gt;有關 Brython html 模組的用法, 請參考 &lt;a href="http://www.brython.info/static_doc/en/html.html"&gt;http://www.brython.info/static_doc/en/html.html&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;計算機程式甲班成員連結:&lt;/p&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下利用 Brython 程式執行檔案讀取與比對流程 --&gt;

&lt;!-- 假如需要用圖型表示數字, 則利用 canvas 繪圖 --&gt;

&lt;!-- &lt;canvas id="plotarea" width="600" height="400"&gt;&lt;/canvas&gt; --&gt;

&lt;p&gt;甲班學員投影片:&lt;/p&gt;
&lt;div id="container1"&gt;&lt;/div&gt;

&lt;script type="text/python3" id="script1"&gt;
from browser import document, html
container1 = document['container1']
adata = open("./../users/a.txt").read()
alist = adata.splitlines()
n = 0
for stud_num in alist:
    mlink = html.A(stud_num, href="http://s"+str(stud_num)+".github.io/2016fallcp_hw")
    mlink += " | "
    n = n +1
    if n%8 == 0:
        mlink += html.BR()
    container1 &lt;= mlink
&lt;/script&gt;

&lt;p&gt;&lt;br /&gt;
甲班學員網誌:&lt;/p&gt;
&lt;div id="container2"&gt;&lt;/div&gt;

&lt;script type="text/python3" id="script2"&gt;
from browser import document, html
from script1 import alist
container2 = document['container2']
n = 0
for stud_num in alist:
    mlink = html.A(stud_num, href="http://s"+str(stud_num)+".github.io/2016fallcp_hw/blog")
    mlink += " | "
    n = n +1
    if n%8 == 0:
        mlink += html.BR()
    container2 &lt;= mlink
&lt;/script&gt;

&lt;p&gt;&lt;br /&gt;
甲班學員 wiki:&lt;/p&gt;
&lt;div id="container3"&gt;&lt;/div&gt;

&lt;script type="text/python3" id="script3"&gt;
from browser import document, html
from script1 import alist
container3 = document['container3']
n = 0
for stud_num in alist:
    mlink = html.A(stud_num, href="http://github.com/s"+str(stud_num)+"/2016fallcp_hw/wiki")
    mlink += " | "
    n = n +1
    if n%8 == 0:
        mlink += html.BR()
    container3 &lt;= mlink
&lt;/script&gt;

&lt;p&gt;&lt;br /&gt;
甲班學員倉儲:&lt;/p&gt;
&lt;div id="container4"&gt;&lt;/div&gt;

&lt;script type="text/python3" id="script4"&gt;
from browser import document, html
from script1 import alist
container4 = document['container4']
n = 0
for stud_num in alist:
    mlink = html.A(stud_num, href="http://github.com/s"+str(stud_num)+"/2016fallcp_hw")
    mlink += " | "
    n = n +1
    if n%8 == 0:
        mlink += html.BR()
    container4 &lt;= mlink
&lt;/script&gt;

&lt;hr&gt;

&lt;p&gt;乙班學員投影片:&lt;/p&gt;
&lt;div id="container5"&gt;&lt;/div&gt;

&lt;script type="text/python3" id="script5"&gt;
from browser import document, html
container5 = document['container5']
adata = open("./../users/b.txt").read()
alist = adata.splitlines()
n = 0
for stud_num in alist:
    mlink = html.A(stud_num, href="http://s"+str(stud_num)+".github.io/2016fallcp_hw")
    mlink += " | "
    n = n +1
    if n%8 == 0:
        mlink += html.BR()
    container5 &lt;= mlink
&lt;/script&gt;

&lt;p&gt;&lt;br /&gt;
乙班學員網誌:&lt;/p&gt;
&lt;div id="container6"&gt;&lt;/div&gt;

&lt;script type="text/python3" id="script6"&gt;
from browser import document, html
from script5 import alist
container6 = document['container6']
n = 0
for stud_num in alist:
    mlink = html.A(stud_num, href="http://s"+str(stud_num)+".github.io/2016fallcp_hw/blog")
    mlink += " | "
    n = n +1
    if n%8 == 0:
        mlink += html.BR()
    container6 &lt;= mlink
&lt;/script&gt;

&lt;p&gt;&lt;br /&gt;
乙班學員 wiki:&lt;/p&gt;
&lt;div id="container7"&gt;&lt;/div&gt;

&lt;script type="text/python3" id="script7"&gt;
from browser import document, html
from script5 import alist
container7 = document['container7']
n = 0
for stud_num in alist:
    mlink = html.A(stud_num, href="http://github.com/s"+str(stud_num)+"/2016fallcp_hw/wiki")
    mlink += " | "
    n = n +1
    if n%8 == 0:
        mlink += html.BR()
    container7 &lt;= mlink
&lt;/script&gt;

&lt;p&gt;&lt;br /&gt;
乙班學員倉儲:&lt;/p&gt;
&lt;div id="container8"&gt;&lt;/div&gt;

&lt;script type="text/python3" id="script8"&gt;
from browser import document, html
from script5 import alist
container8 = document['container8']
n = 0
for stud_num in alist:
    mlink = html.A(stud_num, href="http://github.com/s"+str(stud_num)+"/2016fallcp_hw")
    mlink += " | "
    n = n +1
    if n%8 == 0:
        mlink += html.BR()
    container8 &lt;= mlink
&lt;/script&gt;

&lt;p&gt;&lt;br /&gt;
上述連結代表處理程式:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;
&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下利用 Brython 程式執行檔案讀取與比對流程 --&gt;
&lt;!-- 假如需要用圖型表示數字, 則利用 canvas 繪圖 --&gt;
&lt;!-- &lt;canvas id="plotarea" width="600" height="400"&gt;&lt;/canvas&gt; --&gt;

甲班學員投影片:

&lt;div id="container1"&gt;&lt;/div&gt;

&lt;script type="text/python3" id="script1"&gt;
from browser import document, html
container1 = document['container1']
adata = open("./../users/a.txt").read()
alist = adata.splitlines()
n = 0
for stud_num in alist:
    mlink = html.A(stud_num, href="http://s"+str(stud_num)+".github.io/2016fallcp_hw")
    mlink += " | "
    n = n +1
    if n%8 == 0:
        mlink += html.BR()
    container1 &lt;= mlink
&lt;/script&gt;

&lt;br /&gt;
甲班學員網誌:

&lt;div id="container2"&gt;&lt;/div&gt;

&lt;script type="text/python3" id="script2"&gt;
from browser import document, html
# 學員選課名單直接從 id 為 script1 的程式段中導入
from script1 import alist
container2 = document['container2']
n = 0
for stud_num in alist:
    mlink = html.A(stud_num, href="http://s"+str(stud_num)+".github.io/2016fallcp_hw/blog")
    mlink += " | "
    n = n +1
    if n%8 == 0:
        mlink += html.BR()
    container2 &lt;= mlink
&lt;/script&gt;
&lt;/pre&gt;</summary><category term="評分"></category></entry></feed>